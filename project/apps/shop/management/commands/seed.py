from django.core.management.base import BaseCommand
from apps.shop.models import Category, Product, Favorite, CartItem, Order, OrderItem
from apps.reviews.models import Review, Like
from apps.articles.models import Article, Comment
from apps.users.models import User
from django.contrib.contenttypes.models import ContentType
from django.utils import timezone
from django.utils.text import slugify
from faker import Faker
import random

fake = Faker('ru_RU')


def generate_unique_slug_for_category(name):
    base_slug = slugify(name) or "category"
    slug = base_slug
    i = 1
    while Category.objects.filter(slug=slug).exists():
        slug = f"{base_slug}-{i}"
        i += 1
    return slug


def generate_unique_slug_for_article(title):
    base_slug = slugify(title) or "article"
    slug = base_slug
    i = 1
    while Article.objects.filter(slug=slug).exists():
        slug = f"{base_slug}-{i}"
        i += 1
    return slug


class Command(BaseCommand):
    help = "–ó–∞–ø–æ–ª–Ω—è–µ—Ç –±–∞–∑—É —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"

    def handle(self, *args, **options):
        self.stdout.write("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã...")

        # --- –û—á–∏—Å—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü ---
        Like.objects.all().delete()
        Comment.objects.all().delete()
        Article.objects.all().delete()
        Review.objects.all().delete()
        OrderItem.objects.all().delete()
        Order.objects.all().delete()
        CartItem.objects.all().delete()
        Favorite.objects.all().delete()
        Product.objects.all().delete()
        Category.objects.all().delete()
        User.objects.all().delete()
        self.stdout.write("‚úÖ –°—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã.")

        # --- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ---
        users = [
            User.objects.create_user(
                username=f"user{i}",
                email=f"user{i}@example.com",
                password="123456",
                is_admin=(i == 0),
            )
            for i in range(1, 6)
        ]

        # --- –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ ---
        category_data = {
            "–ü—Ä–æ—Ç–µ–∏–Ω—ã": [
                "–°—ã–≤–æ—Ä–æ—Ç–æ—á–Ω—ã–π –ø—Ä–æ—Ç–µ–∏–Ω",
                "–ö–∞–∑–µ–∏–Ω–æ–≤—ã–π –ø—Ä–æ—Ç–µ–∏–Ω",
                "–ú—É–ª—å—Ç–∏–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω—ã–π –ø—Ä–æ—Ç–µ–∏–Ω",
                "–ò–∑–æ–ª—è—Ç –ø—Ä–æ—Ç–µ–∏–Ω–∞"
            ],
            "–ö—Ä–µ–∞—Ç–∏–Ω—ã": [
                "–ö—Ä–µ–∞—Ç–∏–Ω –º–æ–Ω–æ–≥–∏–¥—Ä–∞—Ç",
                "–ö—Ä–µ–∞—Ç–∏–Ω HCL",
                "–ö—Ä–µ–∞—Ç–∏–Ω –∫–∞–ø—Å—É–ª—ã",
                "–ö—Ä–µ–∞—Ç–∏–Ω –ø–æ—Ä–æ—à–æ–∫"
            ],
            "–ñ–∏—Ä–æ—Å–∂–∏–≥–∞—Ç–µ–ª–∏": [
                "–¢–µ—Ä–º–æ–≥–µ–Ω–Ω—ã–µ –∂–∏—Ä–æ—Å–∂–∏–≥–∞—Ç–µ–ª–∏",
                "L-–∫–∞—Ä–Ω–∏—Ç–∏–Ω",
                "CLA (–ª–∏–Ω–æ–ª–µ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞)",
                "–≠–∫—Å—Ç—Ä–∞–∫—Ç –∑–µ–ª—ë–Ω–æ–≥–æ —á–∞—è"
            ],
            "–í–∏—Ç–∞–º–∏–Ω—ã –∏ –º–∏–Ω–µ—Ä–∞–ª—ã": [
                "–ú—É–ª—å—Ç–∏–≤–∏—Ç–∞–º–∏–Ω—ã –¥–ª—è —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤",
                "–û–º–µ–≥–∞-3",
                "–í–∏—Ç–∞–º–∏–Ω D3",
                "–ú–∞–≥–Ω–∏–π –∏ —Ü–∏–Ω–∫"
            ],
            "–ê–º–∏–Ω–æ–∫–∏—Å–ª–æ—Ç—ã": [
                "BCAA 2:1:1",
                "–ì–ª—é—Ç–∞–º–∏–Ω",
                "–ê—Ä–≥–∏–Ω–∏–Ω",
                "–ë–µ—Ç–∞-–∞–ª–∞–Ω–∏–Ω"
            ],
        }

        categories = []
        for name in category_data.keys():
            if not name.strip():
                continue
            slug = generate_unique_slug_for_category(name)
            category = Category.objects.create(name=name, slug=slug)
            categories.append(category)
        self.stdout.write("‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã.")

        # --- –ü—Ä–æ–¥—É–∫—Ç—ã ---
        products = []
        for category in categories:
            for product_name in category_data[category.name]:
                product = Product.objects.create(
                    name=product_name,
                    description=fake.paragraph(nb_sentences=3),
                    price=random.randint(700, 8000),
                    stock=random.randint(10, 100),
                    category=category,
                )
                products.append(product)
        self.stdout.write("‚úÖ –ü—Ä–æ–¥—É–∫—Ç—ã —Å–æ–∑–¥–∞–Ω—ã.")

        # --- –ò–∑–±—Ä–∞–Ω–Ω–æ–µ ---
        for user in users:
            for product in random.sample(products, 3):
                Favorite.objects.get_or_create(user=user, product=product)
        self.stdout.write("‚úÖ –ò–∑–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã.")

        # --- –û—Ç–∑—ã–≤—ã ---
        for product in products:
            for user in random.sample(users, 2):
                Review.objects.create(
                    user=user,
                    product=product,
                    rating=random.randint(3, 5),
                    text=random.choice([
                        "–û—Ç–ª–∏—á–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç, –±–µ—Ä—É –Ω–µ –ø–µ—Ä–≤—ã–π —Ä–∞–∑!",
                        "–î–æ–≤–æ–ª–µ–Ω –∫–∞—á–µ—Å—Ç–≤–æ–º, —ç—Ñ—Ñ–µ–∫—Ç –µ—Å—Ç—å.",
                        "–°—Ä–µ–¥–Ω–µ, –æ–∂–∏–¥–∞–ª –±–æ–ª—å—à–µ–≥–æ.",
                        "–•–æ—Ä–æ—à–∞—è —Ü–µ–Ω–∞ –∏ –¥–æ—Å—Ç–∞–≤–∫–∞ –±—ã—Å—Ç—Ä–∞—è."
                    ])
                )
        self.stdout.write("‚úÖ –û—Ç–∑—ã–≤—ã —Å–æ–∑–¥–∞–Ω—ã.")

        # --- –ó–∞–∫–∞–∑—ã ---
        for user in users:
            for _ in range(2):
                order = Order.objects.create(
                    user=user,
                    created_at=timezone.now(),
                    status=random.choice(["pending", "shipped", "delivered"]),
                    total_price=0
                )
                items = random.sample(products, 3)
                total = 0
                for product in items:
                    qty = random.randint(1, 3)
                    price = product.price
                    total += qty * price
                    OrderItem.objects.create(
                        order=order,
                        product=product,
                        quantity=qty,
                        buy_price=price
                    )
                order.total_price = total
                order.save()
        self.stdout.write("‚úÖ –ó–∞–∫–∞–∑—ã —Å–æ–∑–¥–∞–Ω—ã.")

        # --- –°—Ç–∞—Ç—å–∏ ---
        articles = []
        article_titles = [
            "–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –ª—É—á—à–∏–π –ø—Ä–æ—Ç–µ–∏–Ω?",
            "5 —Å–ø–æ—Å–æ–±–æ–≤ —É—Å–∫–æ—Ä–∏—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
            "–†–æ–ª—å –∫—Ä–µ–∞—Ç–∏–Ω–∞ –≤ —Ä–æ—Å—Ç–µ –º—ã—à—Ü",
            "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –¥–ª—è –Ω–∞–±–æ—Ä–∞ –º–∞—Å—Å—ã",
            "–ü–æ—á–µ–º—É –≤–∞–∂–µ–Ω –≤–∏—Ç–∞–º–∏–Ω D –¥–ª—è —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–∞"
        ]
        for _ in range(5):
            title = random.choice(article_titles)
            slug = generate_unique_slug_for_article(title)
            article = Article.objects.create(
                author=random.choice(users),
                title=title,
                slug=slug,
                content=fake.paragraph(nb_sentences=6)
            )
            articles.append(article)
        self.stdout.write("‚úÖ –°—Ç–∞—Ç—å–∏ —Å–æ–∑–¥–∞–Ω—ã.")

        # --- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ ---
        for article in articles:
            for user in random.sample(users, 3):
                Comment.objects.create(
                    article=article,
                    user=user,
                    text=random.choice([
                        "–û—Ç–ª–∏—á–Ω–∞—è —Å—Ç–∞—Ç—å—è, —Å–ø–∞—Å–∏–±–æ!",
                        "–¢–µ–ø–µ—Ä—å —Å—Ç–∞–ª–æ –ø–æ–Ω—è—Ç–Ω–µ–µ, –∫–∞–∫ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –¥–æ–±–∞–≤–∫–∏.",
                        "–ü–æ–ª–µ–∑–Ω–æ, –≤–æ–∑—å–º—É –Ω–∞ –∑–∞–º–µ—Ç–∫—É.",
                        "–ê–≤—Ç–æ—Ä, —Ä–∞—Å—Å–∫–∞–∂–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ –¥–æ–∑–∏—Ä–æ–≤–∫–∏!"
                    ])
                )
        self.stdout.write("‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã.")

        # --- –õ–∞–π–∫–∏ ---
        likeable_models = [Article, Comment, Review]
        for user in users:
            for model in likeable_models:
                model_ct = ContentType.objects.get_for_model(model)
                objects = model.objects.all()
                for obj in random.sample(list(objects), min(3, len(objects))):
                    Like.objects.get_or_create(
                        user=user,
                        content_type=model_ct,
                        object_id=obj.id,
                        is_like=random.choice([True, False])
                    )
        self.stdout.write("‚úÖ –õ–∞–π–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã.")
        self.stdout.write(self.style.SUCCESS("üéâ –ë–∞–∑–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏!"))
